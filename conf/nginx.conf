# 启动之后worker进程所属用户,默认nobody，后面可能报错改为root
user  root;
# 设置worker进程的个数，最大 == cpu的核数（推荐）
worker_processes  1;

# 错误日志路径,相对路径,注释表默认情况可以自行更改
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#  pid文件，nginx的pid号
#pid        logs/nginx.pid;


# nginx的事件处理 epoll后加的,worker_connections 最大的链接数
events {
    use epoll;
    worker_connections  1024;
}


# http 模块
http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
	# web服务器监听的端口
        listen       80;
	# web服务器域名,客户端通过该域名访问该服务器
        server_name  localhost;

	# 字符编码(默认是俄罗斯编码)
        #charset koi8-r;
        charset utf8;

	# 操作的日志
        #access_log  logs/host.access.log  main;

	# location模块
        location / {        # 只要目录是/话全部转接到index下
	    # 查找的根目录名称，相对路径
            root   html;
	    # 客户端请求是一个目录，nginx需要找一默认显示的网页
            index  index.html index.htm;
        }

	# home目录解析
	location = /home/ {  # 精准定位到/home才能显示fuck_idex.html页面
	     root html;
	     index fuck_index.html;
	}
	# 找不到自动转接到404
        #error_page  404              /404.html;
	
	# ==========================fcgi===========================
	location = /login {
	    # 数据转发 到 cgi程序上去 相关请求会被解析到fastcgi.conf的环境变量中去
	    fastcgi_pass 127.0.0.1:10000;
	    include fastcgi.conf;
	}
	location /uploadfile{
	    fastcgi_pass 127.0.0.1:10001;
	    include fastcgi.conf;
	    # 设置客户端上传大小
	    client_max_body_size 10240m;
	}
	# ========================fastdfs===============================
	# fastdfs下载链接路径 
	location ~ /group\w/M\w\w/ {
	    root /home/hang/github/PanServer/data/storage/data;    
	    # 用fastdfs_module进行管理转发
	    ngx_fastdfs_module;
	}
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the php scripts to apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the php scripts to fastcgi server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  script_filename  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    # =================================================================================
    # 反向代理 
    server{
        listen       80;
	# web服务器域名,客户端通过该域名访问该服务器
        server_name  netmenager.com;	# 客户端访问的域名

	# 字符编码(默认是俄罗斯编码)
        #charset koi8-r;
        charset utf8;

	# 操作的日志
        #access_log  logs/host.access.log  main;
	# location模块
        location / {
	    # 反向代理指定域名
	    proxy_pass http://netmenager.com;
	}
    }
    upstream netmenager.com{
	server 192.168.2.1:80;
    }

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
